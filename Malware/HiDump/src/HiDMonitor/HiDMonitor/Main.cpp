#include <windows.h>
#include <syelog.h>
#include <detours.h>

#include "HookHandlers.h"
#include "Config.h"

#pragma comment(lib, "detours")
#pragma comment(lib, "syelog")

static
BOOL ProcessAttach(HMODULE hDll)
{
	SyelogOpen("HiMonitor", SYELOG_FACILITY_APPLICATION);

	ConfigInit();
	ConfigLoad((HINSTANCE) hDll);

	HookInit();

	Syelog(SYELOG_SEVERITY_NOTICE, "Detour Attached To: %d", GetCurrentProcessId());

	return TRUE;
}

static
BOOL ProcessDetach(HMODULE hDll)
{
	HookExit();

	Syelog(SYELOG_SEVERITY_NOTICE, "Detour closing");
	SyelogClose(FALSE);

	return TRUE;
}

extern "C" {
	__declspec(dllexport) VOID __cdecl Init()
	{
		// Init Tasks
		// Called by Loader Shellcode (Injector)
	}
}

BOOL APIENTRY DllMain(HINSTANCE hModule, DWORD dwReason, PVOID lpReserved)
{
	if(DetourIsHelperProcess())
		return TRUE;

	switch(dwReason) {

	case DLL_PROCESS_ATTACH:
		DetourRestoreAfterWith();
		return ProcessAttach(hModule);

	case DLL_PROCESS_DETACH:
		return ProcessDetach(hModule);

	case DLL_THREAD_ATTACH:
		break;
	case DLL_THREAD_DETACH:
		break;

	}

	return TRUE;
}