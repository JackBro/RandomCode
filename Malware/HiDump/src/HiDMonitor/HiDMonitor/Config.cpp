#include "Config.h"

static
HI_CONFIG gblMonitorConfig;

HI_CONFIG *ConfigGet()
{
	return (&gblMonitorConfig);
}

BOOL ConfigLoad(HINSTANCE hModuleInstance)
{
	PIMAGE_DOS_HEADER		pDosHeader;
	PIMAGE_NT_HEADERS		pNtHeaders;
	PIMAGE_SECTION_HEADER	pSectionHeader;
	DWORD					dwImageBase, i;
	BOOL					bRet = FALSE;

	dwImageBase = (DWORD) hModuleInstance;
	pDosHeader = (PIMAGE_DOS_HEADER) dwImageBase;

	if(pDosHeader->e_magic != IMAGE_DOS_SIGNATURE)
		return bRet;

	pNtHeaders = (PIMAGE_NT_HEADERS)(dwImageBase + pDosHeader->e_lfanew);
	if(pNtHeaders->Signature != IMAGE_NT_SIGNATURE)
		return bRet;

	for(i = 0, pSectionHeader = IMAGE_FIRST_SECTION(pNtHeaders); 
		i < pNtHeaders->FileHeader.NumberOfSections; i++) {
		
			if((!strcmp((char*) pSectionHeader[i].Name, MONITOR_CONFIG_SECTION)) && 
				(pSectionHeader[i].SizeOfRawData >= sizeof(HI_CONFIG))) {

				CopyMemory(&gblMonitorConfig, (PVOID) (dwImageBase + pSectionHeader[i].VirtualAddress),
					sizeof(HI_CONFIG));

				bRet = TRUE;
				break;
			}
	}

	return bRet;
}

VOID ConfigInit()
{
	ZeroMemory(&gblMonitorConfig, sizeof(HI_CONFIG));
}